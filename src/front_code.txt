// File: ./app/layout.tsx
import type { Metadata } from "next";
import "./globals.css";
import { Geist, Geist_Mono } from "next/font/google";
// import { motion } from "framer-motion"

import { ThemeProvider } from "@/components/theme-provider";
import { FloatingPaths } from "@/components/floating-paths";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "DentiaPro - CRM pour dentistes",
  description: "Solution de gestion de cabinet dentaire nouvelle génération",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html 
      lang="fr" 
      className={`${geistSans.variable} ${geistMono.variable}`}
      suppressHydrationWarning
    >
      <head>
        <script
          dangerouslySetInnerHTML={{
            __html: `
              try {
                const theme = localStorage.getItem('theme') || 'light';
                document.documentElement.classList.add(theme);
              } catch (e) {}
            `,
          }}
        />
      </head>
      <body className="antialiased bg-white dark:bg-slate-950">
        <ThemeProvider
          attribute="class"
          defaultTheme="light"
          enableSystem
          disableTransitionOnChange
        >
     

      
       

          <div
            className="relative overflow-hidden transition-shadow duration-300 shadow-lg group "
            >
            {/*  bg-gradient-to-b from-black/10 to-white/10 dark:from-white/10 dark:to-black/10 rounded-2xl backdrop-blur-lg hover:shadow-xl */}
             <div className="absolute inset-0">
        <FloatingPaths position={-1} />
     

      </div>
          {children}
          </div>
        </ThemeProvider>
      </body>
    </html>
  );
}

// File: ./app/page.tsx
// src/app/page.tsx

import { Navbar } from "@/components/navbar"
import { HeroSection } from "@/components/hero-section"
import { Features } from "@/components/features"
import { PricingTable } from "@/components/pricing-table"
import { Footer } from "@/components/footer"
import Saas from "@/components/saas"
import WhoWeAre from "@/components/whoweare"
import Contact from "@/components/contact"
import MetricsSection from "@/components/metrics-section"
import FeatureDetails from "@/components/features-details"

export default function Home() {
  return (
    <div className="flex flex-col min-h-screen">
      <Navbar />
      <main className="flex-1 pt-16">
        <HeroSection />
        <WhoWeAre/>
        <MetricsSection/>
        <Saas/>
        <Features />
        <FeatureDetails/>
        <PricingTable />
        <Contact/>
      </main>
      <Footer />
    </div>
  )
}



// File: ./components/auto-scroll-slider.tsx
"use client"

import type React from "react"
import { useState, useEffect, useRef } from "react"

interface AutoScrollSliderProps {
  items: string[] // Array of slides (can be images, divs, etc.)
}

const AutoScrollSlider: React.FC<AutoScrollSliderProps> = ({ items }) => {
  const [currentIndex, setCurrentIndex] = useState<number>(0)
  const sliderRef = useRef<HTMLDivElement>(null)

  // Auto-scroll logic
  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentIndex((prevIndex) => (prevIndex + 1) % items.length)
    }, 3000) // Change slide every 3 seconds

    return () => clearInterval(interval) // Cleanup interval on unmount
  }, [items.length])

  // Update slider position based on currentIndex
  useEffect(() => {
    if (sliderRef.current) {
      sliderRef.current.style.transform = `translateX(-${currentIndex * 100}%)`
    }
  }, [currentIndex])

  return (
    <div className="absolute inset-0 w-full h-full overflow-hidden -z-10">
      {/* Slider container */}
      <div ref={sliderRef} className="flex h-full transition-transform duration-500 ease-in-out">
        {items.map((item, index) => (
          <div key={index} className="flex items-center justify-center min-w-full">
            <img src={item || "/placeholder.svg"} alt={`Slide ${index + 1}`} className="object-cover w-full h-full" />
          </div>
        ))}
      </div>
    </div>
  )
}

export default AutoScrollSlider



// File: ./components/contact.tsx
"use client"

import { Button } from "@/components/ui/button"
import { Card, CardContent } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Textarea } from "@/components/ui/textarea"
import Image from "next/image"

export default function Contact() {
    return (
        <section className="container px-4 py-12 mx-auto">
            <div className="mb-8 text-center">
                <h2 className="mb-2 text-2xl font-semibold text-gray-800 md:text-3xl">We Are Always Ready To Help You.</h2>
                <h3 className="mb-4 text-xl font-semibold text-gray-800 md:text-2xl">Book An Appointment</h3>
                <p className="max-w-2xl mx-auto text-gray-500">
                    Lorem ipsum dolor sit amet consectetur adipiscing elit praesent aliquet.
                </p>
            </div>

            <div className="grid items-center max-w-6xl gap-8 mx-auto lg:grid-cols-2">
                <Card className="border-0 shadow-none">
                    <CardContent className="p-0">
                        <form className="grid gap-4">
                            <div className="grid gap-4 sm:grid-cols-2">
                                <Input type="text" placeholder="Name" className="bg-gray-50" />
                                <Input type="email" placeholder="Email" className="bg-gray-50" />
                            </div>
                            <div className="grid gap-4 sm:grid-cols-2">
                                <Input type="tel" placeholder="Phone" className="bg-gray-50" />
                                <Input type="date" className="bg-gray-50" />
                            </div>
                            <Textarea placeholder="Write Your Message here..." className="bg-gray-50 min-h-[120px]" />
                            <div className="space-y-2">
                                <Button className="w-full bg-blue-600 hover:bg-blue-700">Book An Appointment</Button>
                                <p className="text-sm text-center text-gray-500">( We will confirm by an Text Message )</p>
                            </div>
                        </form>
                    </CardContent>
                </Card>

                <div className="hidden lg:block">
                    <Image
                        src="/img/contact-img.png"
                        alt="Medical professionals"
                        width={500}
                        height={600}
                        className="object-contain"
                    />
                </div>
            </div>
        </section>
    )
}



// File: ./components/features-details.tsx
import Image from "next/image"
import { Button } from "@/components/ui/button"
import { Check } from "lucide-react"

export default function FeatureDetails() {
  return (
    <div className="bg-[#e6f2ef] px-4 py-16 md:px-6 lg:px-8">
      <div className="mx-auto space-y-24 max-w-7xl">
        {/* Claims Tracker Section */}
        <section className="grid items-center gap-8 lg:grid-cols-2 lg:gap-12">
          <div className="space-y-6">
            <h2 className="text-2xl font-bold tracking-tight text-gray-900 sm:text-3xl">Claims Tracker</h2>
            <p className="text-gray-600">
              No more messing out on claims with Dentistry Automation&apos;s Claims Tracker solution. Our Claims Tracker
              helps the claims agent follow up with the insurance company on the claims submitted for any of their
              patients.
            </p>
            <ul className="space-y-4">
              <li className="flex items-start gap-3">
                <Check className="w-5 h-5 mt-1 text-blue-500" />
                <span>
                  The agent can follow up on all unpaid claims from the claim age bucket with the insurance company.
                </span>
              </li>
              <li className="flex items-start gap-3">
                <Check className="w-5 h-5 mt-1 text-blue-500" />
                <span>80% reduction in claim denials and claims loss.</span>
              </li>
              <li className="flex items-start gap-3">
                <Check className="w-5 h-5 mt-1 text-blue-500" />
                <span>SoT downloads all the claims data including the EOB for each patient.</span>
              </li>
              <li className="flex items-start gap-3">
                <Check className="w-5 h-5 mt-1 text-blue-500" />
                <span>Offers customizable reports for deeper business insights.</span>
              </li>
            </ul>
            <Button variant="outline" className="rounded-full">
              Learn More
            </Button>
          </div>
          <div className="lg:ml-auto">
            <Image
              src="/mockup1.png"
              alt="Claims Tracker Interface"
              width={600}
              height={400}
              className="rounded-lg shadow-lg"
            />
          </div>
        </section>

        {/* Payment Posting Section */}
        <section className="grid items-center gap-8 lg:grid-cols-2 lg:gap-12">
          <div className="lg:order-2">
            <h2 className="text-2xl font-bold tracking-tight text-gray-900 sm:text-3xl">Payment Posting</h2>
            <p className="mt-6 text-gray-600">
              Our Payment Posting portal helps the A/R agents to mine through the bank reports and manual checks from
              bank accounts to be processed by the bot.
            </p>
            <ul className="mt-8 space-y-4">
              <li className="flex items-start gap-3">
                <Check className="w-5 h-5 mt-1 text-blue-500" />
                <span>SoT processes the payment and fetches EOB data from the Payer Portal.</span>
              </li>
              <li className="flex items-start gap-3">
                <Check className="w-5 h-5 mt-1 text-blue-500" />
                <span>Offers EOB search.</span>
              </li>
              <li className="flex items-start gap-3">
                <Check className="w-5 h-5 mt-1 text-blue-500" />
                <span>Writes back into the TMS Patient ledger and Account Receivables module.</span>
              </li>
              <li className="flex items-start gap-3">
                <Check className="w-5 h-5 mt-1 text-blue-500" />
                <span>Downloadable reports on payments posted.</span>
              </li>
              <li className="flex items-start gap-3">
                <Check className="w-5 h-5 mt-1 text-blue-500" />
                <span>Saves your front desk 20+ hours in manual payment postings.</span>
              </li>
              <li className="flex items-start gap-3">
                <Check className="w-5 h-5 mt-1 text-blue-500" />
                <span>Data on patient/procedure details, the amount charged, adjustments, and more.</span>
              </li>
            </ul>
            <div className="mt-8">
              <Button variant="outline" className="rounded-full">
                Learn More
              </Button>
            </div>
          </div>
          <div className="lg:order-1">
            <Image
              src="/mockup2.png"
              alt="Payment Posting Interface"
              width={600}
              height={400}
              className="rounded-lg shadow-lg"
            />
          </div>
        </section>

        {/* Online Appointment System Section */}
        <section className="grid items-center gap-8 lg:grid-cols-2 lg:gap-12">
          <div>
            <h2 className="text-2xl font-bold tracking-tight text-gray-900 sm:text-3xl">Online Appointment System</h2>
            <ul className="mt-8 space-y-4">
              <li className="flex items-start gap-3">
                <Check className="w-5 h-5 mt-1 text-blue-500" />
                <span>Streamlines the entire appointment scheduling process for staff.</span>
              </li>
              <li className="flex items-start gap-3">
                <Check className="w-5 h-5 mt-1 text-blue-500" />
                <span>Allows to book, reschedule or cancel appointments online 24/7.</span>
              </li>
              <li className="flex items-start gap-3">
                <Check className="w-5 h-5 mt-1 text-blue-500" />
                <span>Provides real-time availability for doctors reducing booking conflicts.</span>
              </li>
              <li className="flex items-start gap-3">
                <Check className="w-5 h-5 mt-1 text-blue-500" />
                <span>Integrates seamlessly with your existing PMS, syncing appointment details.</span>
              </li>
              <li className="flex items-start gap-3">
                <Check className="w-5 h-5 mt-1 text-blue-500" />
                <span>Enables staff to manage multiple providers and locations with ease.</span>
              </li>
              <li className="flex items-start gap-3">
                <Check className="w-5 h-5 mt-1 text-blue-500" />
                <span>Customizable forms for capturing patient details during appointment booking.</span>
              </li>
              <li className="flex items-start gap-3">
                <Check className="w-5 h-5 mt-1 text-blue-500" />
                <span>Quick insights into daily schedules, cancellations, and appointments.</span>
              </li>
              <li className="flex items-start gap-3">
                <Check className="w-5 h-5 mt-1 text-blue-500" />
                <span>Saves front desk hours by automating manual scheduling tasks.</span>
              </li>
              <li className="flex items-start gap-3">
                <Check className="w-5 h-5 mt-1 text-blue-500" />
                <span>Provides downloadable reports for appointment statistics and patient flow management.</span>
              </li>
            </ul>
            <div className="mt-8">
              <Button variant="outline" className="rounded-full">
                Learn More
              </Button>
            </div>
          </div>
          <div className="lg:ml-auto">
            <Image
              src="/mockup3.png"
              alt="Online Appointment System Interface"
              width={600}
              height={400}
              className="rounded-lg shadow-lg"
            />
          </div>
        </section>
      </div>
    </div>
  )
}



// File: ./components/features.tsx
// src/components/features.tsx

"use client"

import { motion } from "framer-motion"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Calendar, Users, BarChartIcon as ChartBar, Shield, Clock, CreditCard } from "lucide-react"

const features = [
  {
    title: "Gestion des dossiers patients",
    description: "Accès sécurisé et centralisé aux dossiers patients",
    icon: Users,
  },
  {
    title: "Planification intelligente",
    description: "Rappels automatisés et gestion des rendez-vous",
    icon: Calendar,
  },
  {
    title: "Statistiques avancées",
    description: "Tableaux de bord et analyses de performance",
    icon: ChartBar,
  },
  {
    title: "Sécurité RGPD",
    description: "Protection des données conforme aux normes",
    icon: Shield,
  },
  {
    title: "Gain de temps",
    description: "Automatisation des tâches administratives",
    icon: Clock,
  },
  {
    title: "Gestion financière",
    description: "Facturation et suivi des paiements intégrés",
    icon: CreditCard,
  },
]

export function Features() {
  return (
    <section id="features" className="py-20 dark:bg-gray-900/50">
      <div className="container">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true, margin: "-100px" }}
          transition={{ duration: 0.5 }}
          className="text-center"
        >
          <h2 className="text-3xl font-bold tracking-tighter sm:text-4xl md:text-5xl">Fonctionnalités clés</h2>
          <p className="mt-4 text-xl text-muted-foreground">
            Tout ce dont vous avez besoin pour gérer votre cabinet efficacement
          </p>
        </motion.div>
        <div className="grid gap-6 mt-16 sm:grid-cols-2 lg:grid-cols-3">
          {features.map((feature, index) => (
            <motion.div
              key={feature.title}
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true, margin: "-100px" }}
              transition={{ duration: 0.5, delay: index * 0.1 }}
            >
              <Card className="h-full transition-shadow hover:shadow-lg">
                <CardHeader>
                  <feature.icon className="w-10 h-10 text-blue-500" />
                  <CardTitle className="mt-4">{feature.title}</CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-muted-foreground">{feature.description}</p>
                </CardContent>
              </Card>
            </motion.div>
          ))}
        </div>
      </div>
    </section>
  )
}

import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"

export function Footer() {
  return (
    <footer className="border-t dark:bg-gray-900/50">
      <div className="container py-12">
        <div className="grid gap-8 lg:grid-cols-2">
          <div>
            <h3 className="text-lg font-semibold">Newsletter</h3>
            <p className="mt-2 text-sm text-muted-foreground">
              Restez informé des dernières fonctionnalités et mises à jour
            </p>
            <form className="flex max-w-sm gap-2 mt-4">
              <Input type="email" placeholder="Votre email" className="max-w-[240px]" />
              <Button type="submit">S&apos;abonner</Button>
            </form>
          </div>
          <div className="grid gap-8 sm:grid-cols-2">
            <div>
              <h3 className="text-lg font-semibold">Produit</h3>
              <ul className="mt-4 space-y-2 text-sm">
                <li>
                  <a href="#" className="text-muted-foreground hover:text-foreground">
                    Fonctionnalités
                  </a>
                </li>
                <li>
                  <a href="#" className="text-muted-foreground hover:text-foreground">
                    Tarifs
                  </a>
                </li>
                <li>
                  <a href="#" className="text-muted-foreground hover:text-foreground">
                    FAQ
                  </a>
                </li>
              </ul>
            </div>
            <div>
              <h3 className="text-lg font-semibold">Contact</h3>
              <ul className="mt-4 space-y-2 text-sm">
                <li>
                  <a href="#" className="text-muted-foreground hover:text-foreground">
                    Support
                  </a>
                </li>
                <li>
                  <a href="#" className="text-muted-foreground hover:text-foreground">
                    Démonstration
                  </a>
                </li>
                <li>
                  <a href="#" className="text-muted-foreground hover:text-foreground">
                    Contact commercial
                  </a>
                </li>
              </ul>
            </div>
          </div>
        </div>
        <div className="pt-8 mt-8 text-sm text-center border-t text-muted-foreground">
          <p>&copy; {new Date().getFullYear()} DentiaPro. Tous droits réservés.</p>
        </div>
      </div>
    </footer>
  )
}



// File: ./components/floating-paths.tsx
// src/components/floating-paths.tsx

"use client"

import { motion } from "framer-motion"

export function FloatingPaths({ position }: { position: number }) {
  const paths = Array.from({ length: 36 }, (_, i) => ({
    id: i,
    d: `M-${380 - i * 5 * position} -${189 + i * 6}C-${
      380 - i * 5 * position
    } -${189 + i * 6} -${312 - i * 5 * position} ${216 - i * 6} ${
      152 - i * 5 * position
    } ${343 - i * 6}C${616 - i * 5 * position} ${470 - i * 6} ${
      684 - i * 5 * position
    } ${875 - i * 6} ${684 - i * 5 * position} ${875 - i * 6}`,
    color: `rgba(15,23,42,${0.1 + i * 0.03})`,
    width: 0.5 + i * 0.03,
  }))

  return (
    <div className="absolute inset-0 pointer-events-none">
      <svg className="w-full h-full text-blue-700 dark:text-white" viewBox="0 0 696 316" fill="none">
        {paths.map((path) => (
          <motion.path
            key={path.id}
            d={path.d}
            stroke="currentColor"
            strokeWidth={path.width}
            strokeOpacity={0.1 + path.id * 0.03}
            initial={{ pathLength: 0.3, opacity: 0.6 }}
            animate={{
              pathLength: 1,
              opacity: [0.3, 0.6, 0.3],
              pathOffset: [0, 1, 0],
            }}
            transition={{
              duration: 20 + Math.random() * 10,
              repeat: Number.POSITIVE_INFINITY,
              ease: "linear",
            }}
          />
        ))}
      </svg>
    </div>
  )
}


// File: ./components/footer.tsx
// src/components/footer.tsx

import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"

export function Footer() {
  return (
    <footer className="border-t bg-gray-50 dark:bg-gray-900/50">
      <div className="container py-12">
        <div className="grid gap-8 lg:grid-cols-2">
          <div>
            <h3 className="text-lg font-semibold">Newsletter</h3>
            <p className="mt-2 text-sm text-muted-foreground">
              Restez informé des dernières fonctionnalités et mises à jour
            </p>
            <form className="flex max-w-sm gap-2 mt-4">
              <Input type="email" placeholder="Votre email" className="max-w-[240px]" />
              <Button type="submit">S&apos;abonner</Button>
            </form>
          </div>
          <div className="grid gap-8 sm:grid-cols-2">
            <div>
              <h3 className="text-lg font-semibold">Produit</h3>
              <ul className="mt-4 space-y-2 text-sm">
                <li>
                  <a href="#" className="text-muted-foreground hover:text-foreground">
                    Fonctionnalités
                  </a>
                </li>
                <li>
                  <a href="#" className="text-muted-foreground hover:text-foreground">
                    Tarifs
                  </a>
                </li>
                <li>
                  <a href="#" className="text-muted-foreground hover:text-foreground">
                    FAQ
                  </a>
                </li>
              </ul>
            </div>
            <div>
              <h3 className="text-lg font-semibold">Contact</h3>
              <ul className="mt-4 space-y-2 text-sm">
                <li>
                  <a href="#" className="text-muted-foreground hover:text-foreground">
                    Support
                  </a>
                </li>
                <li>
                  <a href="#" className="text-muted-foreground hover:text-foreground">
                    Démonstration
                  </a>
                </li>
                <li>
                  <a href="#" className="text-muted-foreground hover:text-foreground">
                    Contact commercial
                  </a>
                </li>
              </ul>
            </div>
          </div>
        </div>
        <div className="pt-8 mt-8 text-sm text-center border-t text-muted-foreground">
          <p>&copy; {new Date().getFullYear()} DentiaPro. Tous droits réservés.</p>
        </div>
      </div>
    </footer>
  )
}



// File: ./components/hero-section.tsx
"use client"

import { motion } from "framer-motion"
import { Button } from "@/components/ui/button"
import AutoScrollSlider from "./slider"

const items = ["/img/slider.jpg", "/img/slider2.jpg", "/img/slider3.jpg"]

export function HeroSection() {
  return (
    <section id="hero" className="relative py-20 overflow-hidden md:py-32">
      {/* Background slider */}
      <AutoScrollSlider items={items} />

      <div className="container relative">
        <div className="grid gap-8 lg:grid-cols-2 lg:gap-16">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true, margin: "-100px" }}
            transition={{ duration: 0.5 }}
            className="flex flex-col justify-center space-y-6"
          >
            <motion.h1
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true, margin: "-100px" }}
              transition={{ duration: 0.5, delay: 0.2 }}
              className="text-4xl font-bold tracking-tighter sm:text-5xl xl:text-6xl/none"
            >
              Optimisez votre cabinet dentaire avec DentiaPro
            </motion.h1>
            <motion.p
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true, margin: "-100px" }}
              transition={{ duration: 0.5, delay: 0.3 }}
              className="text-xl text-muted-foreground"
            >
              Le CRM conçu par des dentistes, pour les dentistes
            </motion.p>
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true, margin: "-100px" }}
              transition={{ duration: 0.5, delay: 0.4 }}
            >
              <Button size="lg" className="bg-blue-500 hover:bg-blue-600">
                Essai gratuit 14 jours
              </Button>
            </motion.div>
          </motion.div>
          <motion.div
            initial={{ opacity: 0, scale: 0.8 }}
            whileInView={{ opacity: 1, scale: 1 }}
            viewport={{ once: true, margin: "-100px" }}
            transition={{ duration: 0.5, delay: 0.2 }}
            className="relative h-[400px] w-full lg:h-[600px]"
          >
            {/* This div is now empty, acting as a placeholder for layout purposes */}
          </motion.div>
        </div>
      </div>
      <div className="absolute inset-0 -z-10 bg-gradient-to-b from-blue-50/50 to-white dark:from-blue-950/50 dark:to-background" />
    </section>
  )
}



// File: ./components/macbook-component.tsx
import React from "react";

const MacbookComponent = ({ imageUrl }:{imageUrl:string}) => {
  return (
    <div className="p-[4%_6%] mx-auto max-w-[800px]">
      {/* Screen */}
      <div className="bg-black rounded-[3%_3%_0.5%_0.5%_/_5%] mx-auto relative w-[80%]">
        {/* Screen Border */}
        <div
          className="before:border-[2px] before:border-[#cacacc] before:rounded-[3%_3%_0.5%_0.5%_/_5%] before:shadow-[inset_0_0_0_1px_rgba(0,0,0,0.8),inset_0_0_1px_2px_rgba(255,255,255,0.3)] before:content-[''] before:block before:pt-[67%]"
        ></div>
        {/* Screen Top Line */}
        <div
          className="after:content-[''] after:border-t-[2px] after:border-t-[rgba(255,255,255,0.15)] after:absolute after:bottom-[0.75%] after:left-[0.5%] after:pt-[1%] after:w-[99%]"
        ></div>
        {/* Viewport */}
        <div
          className="absolute bottom-0 left-0 right-0 top-0 m-[4.3%_3.2%] bg-[#333] transition-all duration-3000 ease-in-out bg-[length:100%_auto] bg-[position:0_0] overflow-hidden cursor-pointer hover:bg-[position:0_100%]"
          style={{
            backgroundImage: `url('${imageUrl}')`, // Use the prop here
          }}
        >
          {/* Viewport Overlay */}
          <div
            className="absolute bottom-0 left-0 right-0 top-0 bg-[radial-gradient(circle_at_right_bottom,transparent_75%,rgba(255,255,255,0.05)_75%,transparent)]"
          ></div>
        </div>
      </div>

      {/* Base */}
      <div className="relative w-full">
        <div
          className="before:content-[''] before:block before:pt-[3.3%] before:bg-gradient-to-b before:from-[#eaeced] before:via-[#edeef0_55%] before:via-[#fff_55%] before:via-[#8a8b8f_56%] before:via-[#999ba0_61%] before:via-[#4B4B4F_84%] before:via-[#262627_89%] before:to-[rgba(0,0,0,0.01)_98%] before:rounded-[0_0_10%_10%_/_0_0_50%_50%]"
        ></div>
        <div
          className="after:content-[''] after:absolute after:top-0 after:w-full after:h-[53%] after:bg-gradient-to-r after:from-[rgba(0,0,0,0.5)] after:via-[rgba(255,255,255,0.8)_0.5%] after:via-[rgba(0,0,0,0.4)_3.3%] after:via-[transparent_15%] after:via-[rgba(255,255,255,0.8)_50%] after:via-[transparent_85%] after:via-[rgba(0,0,0,0.4)_96.7%] after:via-[rgba(255,255,255,0.8)_99.5%] after:to-[rgba(0,0,0,0.5)]"
        ></div>
      </div>

      {/* Notch */}
      <div className="bg-[#ddd] rounded-[0_0_7%_7%_/_0_0_95%_95%] shadow-[-5px_-1px_3px_rgba(0,0,0,0.2)_inset,5px_-1px_3px_rgba(0,0,0,0.2)_inset] mx-auto mt-[-3.5%] relative w-[14%] z-[2]">
        <div className="before:content-[''] before:block before:pt-[10%]"></div>
      </div>
    </div>
  );
};

export default MacbookComponent;

// File: ./components/metrics-section.tsx
import { Card } from "@/components/ui/card"
import { Users, UserPlus, Calendar, Clock } from "lucide-react"
import type React from "react" // Added import for React

export default function MetricsSection() {
  return (
    <div className="relative overflow-hidden">
      {/* Background image with overlay */}
      <div
        className="absolute inset-0 z-0 opacity-20"
        style={{
          backgroundImage: `url("/img/bread-bg.jpg")`,
          backgroundSize: "cover",
          backgroundPosition: "center",
        }}
      />

      {/* Blue background */}
      <div className="absolute inset-0 bg-blue-600 z-[-1]" />

      {/* Content */}
      <div className="container px-4 py-16 mx-auto">
        <div className="grid grid-cols-1 gap-8 md:grid-cols-2 lg:grid-cols-4">
          <MetricCard icon={<Users className="w-8 h-8" />} value="3,468" label="Active Patients" />
          <MetricCard icon={<UserPlus className="w-8 h-8" />} value="557" label="New Patients Monthly" />
          <MetricCard icon={<Calendar className="w-8 h-8" />} value="4,379" label="Appointments Scheduled" />
          <MetricCard icon={<Clock className="w-8 h-8" />} value="32" label="Hours Saved Weekly" />
        </div>
      </div>
    </div>
  )
}

interface MetricCardProps {
  icon: React.ReactNode
  value: string
  label: string
}

function MetricCard({ icon, value, label }: MetricCardProps) {
  return (
    <Card className="p-6 text-center text-white bg-transparent border-none">
      <div className="flex flex-col items-center gap-4">
        <div className="p-4 rounded-full bg-white/10 backdrop-blur-sm">{icon}</div>
        <div>
          <div className="mb-2 text-4xl font-bold">{value}</div>
          <div className="text-white/80">{label}</div>
        </div>
      </div>
    </Card>
  )
}



// File: ./components/navbar.tsx
// src/components/navbar.tsx

"use client"

import { useState, useEffect } from "react"
import { motion, AnimatePresence } from "framer-motion"
import { Button } from "@/components/ui/button"
import { Menu, X } from "lucide-react"
import { cn } from "@/lib/utils"
import { useScrollSpy } from "@/hooks/use-scroll-spy"

const navItems = [
  { name: "Accueil", href: "#hero" },
  { name: "Fonctionnalités", href: "#features" },
  { name: "Témoignages", href: "#testimonials" },
  { name: "Tarifs", href: "#pricing" },
  { name: "FAQ", href: "#faq" },
]

export function Navbar() {
  const [isScrolled, setIsScrolled] = useState(false)
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)
  const activeSection = useScrollSpy(
    navItems.map((item) => item.href.replace("#", "")),
    80,
  )

  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 0)
    }
    window.addEventListener("scroll", handleScroll)
    return () => window.removeEventListener("scroll", handleScroll)
  }, [])

  const scrollToSection = (href: string) => {
    setIsMobileMenuOpen(false)
    const element = document.querySelector(href)
    if (element) {
      element.scrollIntoView({ behavior: "smooth" })
    }
  }

  return (
    <motion.header
      initial={{ y: -100 }}
      animate={{ y: 0 }}
      className={cn(
        "fixed top-0 z-50 w-full border-b bg-background/80 backdrop-blur-md transition-colors",
        isScrolled ? "border-border" : "border-transparent",
      )}
    >
      <nav className="container flex items-center justify-between h-16">
        <a href="#" className="text-xl font-bold">
          DentiaPro
        </a>

        {/* Desktop Navigation */}
        <ul className="items-center hidden gap-8 md:flex">
          {navItems.map((item) => (
            <li key={item.href}>
              <button
                onClick={() => scrollToSection(item.href)}
                className={cn(
                  "text-sm transition-colors hover:text-primary",
                  activeSection === item.href.replace("#", "") ? "text-primary font-medium" : "text-muted-foreground",
                )}
              >
                {item.name}
              </button>
            </li>
          ))}
          <li>
            <Button>Essai gratuit</Button>
          </li>
        </ul>

        {/* Mobile Menu Button */}
        <Button
          variant="ghost"
          size="icon"
          className="md:hidden"
          onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
        >
          {isMobileMenuOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
        </Button>
      </nav>

      {/* Mobile Navigation */}
      <AnimatePresence>
        {isMobileMenuOpen && (
          <motion.div
            initial={{ opacity: 0, height: 0 }}
            animate={{ opacity: 1, height: "auto" }}
            exit={{ opacity: 0, height: 0 }}
            className="border-t bg-background md:hidden"
          >
            <ul className="container py-4 space-y-4">
              {navItems.map((item) => (
                <li key={item.href}>
                  <button
                    onClick={() => scrollToSection(item.href)}
                    className={cn(
                      "text-sm transition-colors hover:text-primary",
                      activeSection === item.href.replace("#", "")
                        ? "text-primary font-medium"
                        : "text-muted-foreground",
                    )}
                  >
                    {item.name}
                  </button>
                </li>
              ))}
              <li>
                <Button className="w-full">Essai gratuit</Button>
              </li>
            </ul>
          </motion.div>
        )}
      </AnimatePresence>
    </motion.header>
  )
}



// File: ./components/pricing-table.tsx
// src/components/pricing-table.tsx

"use client"

import { motion } from "framer-motion"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Check } from "lucide-react"

const plans = [
  {
    name: "Essentiel",
    price: "49€",
    description: "Pour les cabinets individuels",
    features: ["Jusqu'à 500 patients", "Gestion des rendez-vous", "Dossiers patients basiques", "Support par email"],
  },
  {
    name: "Pro",
    price: "99€",
    description: "Pour les cabinets en croissance",
    popular: true,
    features: [
      "Patients illimités",
      "Gestion avancée des rendez-vous",
      "Dossiers patients complets",
      "Statistiques avancées",
      "Support prioritaire",
    ],
  },
  {
    name: "Entreprise",
    price: "Sur mesure",
    description: "Pour les réseaux de cliniques",
    features: [
      "Multi-établissements",
      "API personnalisée",
      "Formations sur site",
      "Account manager dédié",
      "Support 24/7",
    ],
  },
]

export function PricingTable() {
  return (
    <section className="py-20" id="pricing">
      <div className="container">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ duration: 0.5 }}
          className="text-center"
        >
          <h2 className="text-3xl font-bold tracking-tighter sm:text-4xl md:text-5xl">
            Tarifs simples et transparents
          </h2>
          <p className="mt-4 text-muted-foreground md:text-xl">Choisissez le plan qui correspond à vos besoins</p>
        </motion.div>
        <div className="grid gap-8 mt-16 md:grid-cols-2 lg:grid-cols-3">
          {plans.map((plan, index) => (
            <motion.div
              key={plan.name}
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.5, delay: index * 0.1 }}
            >
              <Card
                className={`relative ${plan.popular ? "border-blue-500 shadow-blue-100 dark:shadow-blue-900/20" : ""}`}
              >
                {plan.popular && (
                  <Badge className="absolute bg-blue-500 -top-2 right-4" variant="secondary">
                    Populaire
                  </Badge>
                )}
                <CardHeader>
                  <CardTitle className="text-2xl">{plan.name}</CardTitle>
                  <p className="text-3xl font-bold">{plan.price}</p>
                  <p className="text-sm text-muted-foreground">{plan.description}</p>
                </CardHeader>
                <CardContent>
                  <ul className="space-y-4">
                    {plan.features.map((feature) => (
                      <li key={feature} className="flex items-center">
                        <Check className="w-4 h-4 mr-2 text-blue-500" />
                        {feature}
                      </li>
                    ))}
                  </ul>
                  <Button className="w-full mt-6 bg-blue-500 hover:bg-blue-600">Choisir {plan.name}</Button>
                </CardContent>
              </Card>
            </motion.div>
          ))}
        </div>
      </div>
    </section>
  )
}



// File: ./components/saas.tsx
import MacbookComponent from "./mockup"

export default function Saas() {
  return (
    <div className="min-h-screen py-16 bg-gradient-to-b from-emerald-50 to-white">
      <div className="container px-4 mx-auto">
        {/* Hero Content */}
        <div className="mb-12 text-center">
          <h1 className="mb-4 text-4xl font-bold text-gray-800 md:text-5xl">
            <span className="relative">
              Cloud-Based SaaS Solutions
              <span className="absolute left-0 w-full h-3 bottom-1 bg-emerald-200/40 -z-10"></span>
            </span>{" "}
            for Your <br className="md:hidden" />
            Dental Business
          </h1>
          <p className="max-w-2xl mx-auto mb-8 text-gray-600">
            Dentistry Automation&apos;s robust Cloud-based SaaS solutions are here to transform the way your dental practice
            and DSOs operate.
          </p>
          <button className="px-8 py-3 font-medium text-white transition-colors rounded-lg bg-emerald-600 hover:bg-emerald-700">
            Book a Demo
          </button>
        </div>

        {/* MacBook Mockup */}
        <div className="relative">
          {/* Side Elements */}
          <div className="absolute left-0 -translate-y-1/2 opacity-50 top-1/2 -translate-x-1/4">
            <img src="/placeholder.svg?height=200&width=200" alt="" className="w-48 h-auto" aria-hidden="true" />
          </div>
          <div className="absolute right-0 -translate-y-1/2 opacity-50 top-1/2 translate-x-1/4">
            <img src="/placeholder.svg?height=200&width=200" alt="" className="w-48 h-auto" aria-hidden="true" />
          </div>

          {/* MacBook Component */}
          <MacbookComponent imageUrl="/mockup4.png" />
        </div>
      </div>
    </div>
  )
}



// File: ./components/theme-provider.tsx
// src/components/theme-provider.tsx

"use client"

import * as React from "react"
import { ThemeProvider as NextThemesProvider } from "next-themes"

export function ThemeProvider({
  children,
  ...props
}: React.ComponentProps<typeof NextThemesProvider>) {
  return <NextThemesProvider {...props}>{children}</NextThemesProvider>
}


// File: ./components/ui/accordion.tsx
// src/components/ui/accordion.tsx

"use client"

import * as React from "react"
import * as AccordionPrimitive from "@radix-ui/react-accordion"
import { ChevronDown } from "lucide-react"

import { cn } from "@/lib/utils"

const Accordion = AccordionPrimitive.Root

const AccordionItem = React.forwardRef<
  React.ElementRef<typeof AccordionPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>
>(({ className, ...props }, ref) => (
  <AccordionPrimitive.Item
    ref={ref}
    className={cn("border-b", className)}
    {...props}
  />
))
AccordionItem.displayName = "AccordionItem"

const AccordionTrigger = React.forwardRef<
  React.ElementRef<typeof AccordionPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>
>(({ className, children, ...props }, ref) => (
  <AccordionPrimitive.Header className="flex">
    <AccordionPrimitive.Trigger
      ref={ref}
      className={cn(
        "flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180",
        className
      )}
      {...props}
    >
      {children}
      <ChevronDown className="w-4 h-4 transition-transform duration-200 shrink-0" />
    </AccordionPrimitive.Trigger>
  </AccordionPrimitive.Header>
))
AccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName

const AccordionContent = React.forwardRef<
  React.ElementRef<typeof AccordionPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>
>(({ className, children, ...props }, ref) => (
  <AccordionPrimitive.Content
    ref={ref}
    className="overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down"
    {...props}
  >
    <div className={cn("pb-4 pt-0", className)}>{children}</div>
  </AccordionPrimitive.Content>
))

AccordionContent.displayName = AccordionPrimitive.Content.displayName

export { Accordion, AccordionItem, AccordionTrigger, AccordionContent }


// File: ./components/ui/avatar.tsx
// src/components/ui/avatar.tsx

"use client"

import * as React from "react"
import * as AvatarPrimitive from "@radix-ui/react-avatar"

import { cn } from "@/lib/utils"

const Avatar = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Root
    ref={ref}
    className={cn(
      "relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full",
      className
    )}
    {...props}
  />
))
Avatar.displayName = AvatarPrimitive.Root.displayName

const AvatarImage = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Image>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Image
    ref={ref}
    className={cn("aspect-square h-full w-full", className)}
    {...props}
  />
))
AvatarImage.displayName = AvatarPrimitive.Image.displayName

const AvatarFallback = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Fallback>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Fallback
    ref={ref}
    className={cn(
      "flex h-full w-full items-center justify-center rounded-full bg-muted",
      className
    )}
    {...props}
  />
))
AvatarFallback.displayName = AvatarPrimitive.Fallback.displayName

export { Avatar, AvatarImage, AvatarFallback }


// File: ./components/ui/badge.tsx
import * as React from "react"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const badgeVariants = cva(
  "inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
  {
    variants: {
      variant: {
        default:
          "border-transparent bg-primary text-primary-foreground hover:bg-primary/80",
        secondary:
          "border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",
        destructive:
          "border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80",
        outline: "text-foreground",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
)

export interface BadgeProps
  extends React.HTMLAttributes<HTMLDivElement>,
    VariantProps<typeof badgeVariants> {}

function Badge({ className, variant, ...props }: BadgeProps) {
  return (
    <div className={cn(badgeVariants({ variant }), className)} {...props} />
  )
}

export { Badge, badgeVariants }


// File: ./components/ui/button.tsx
// src/components/ui/button.tsx

import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const buttonVariants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
  {
    variants: {
      variant: {
        default: "bg-primary text-primary-foreground hover:bg-primary/90",
        destructive:
          "bg-destructive text-destructive-foreground hover:bg-destructive/90",
        outline:
          "border border-input bg-background hover:bg-accent hover:text-accent-foreground",
        secondary:
          "bg-secondary text-secondary-foreground hover:bg-secondary/80",
        ghost: "hover:bg-accent hover:text-accent-foreground",
        link: "text-primary underline-offset-4 hover:underline",
      },
      size: {
        default: "h-10 px-4 py-2",
        sm: "h-9 rounded-md px-3",
        lg: "h-11 rounded-md px-8",
        icon: "h-10 w-10",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

export interface ButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
    VariantProps<typeof buttonVariants> {
  asChild?: boolean
}

const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className, variant, size, asChild = false, ...props }, ref) => {
    const Comp = asChild ? Slot : "button"
    return (
      <Comp
        className={cn(buttonVariants({ variant, size, className }))}
        ref={ref}
        {...props}
      />
    )
  }
)
Button.displayName = "Button"

export { Button, buttonVariants }


// File: ./components/ui/card.tsx
import * as React from "react"

import { cn } from "@/lib/utils"

const Card = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn(
      "rounded-lg border bg-card text-card-foreground shadow-sm",
      className
    )}
    {...props}
  />
))
Card.displayName = "Card"

const CardHeader = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex flex-col space-y-1.5 p-6", className)}
    {...props}
  />
))
CardHeader.displayName = "CardHeader"

const CardTitle = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn(
      "text-2xl font-semibold leading-none tracking-tight",
      className
    )}
    {...props}
  />
))
CardTitle.displayName = "CardTitle"

const CardDescription = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
CardDescription.displayName = "CardDescription"

const CardContent = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div ref={ref} className={cn("p-6 pt-0", className)} {...props} />
))
CardContent.displayName = "CardContent"

const CardFooter = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex items-center p-6 pt-0", className)}
    {...props}
  />
))
CardFooter.displayName = "CardFooter"

export { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }


// File: ./components/ui/input.tsx
import * as React from "react"

import { cn } from "@/lib/utils"

const Input = React.forwardRef<HTMLInputElement, React.ComponentProps<"input">>(
  ({ className, type, ...props }, ref) => {
    return (
      <input
        type={type}
        className={cn(
          "flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",
          className
        )}
        ref={ref}
        {...props}
      />
    )
  }
)
Input.displayName = "Input"

export { Input }


// File: ./components/ui/textarea.tsx
import * as React from "react"

import { cn } from "@/lib/utils"

const Textarea = React.forwardRef<
  HTMLTextAreaElement,
  React.ComponentProps<"textarea">
>(({ className, ...props }, ref) => {
  return (
    <textarea
      className={cn(
        "flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",
        className
      )}
      ref={ref}
      {...props}
    />
  )
})
Textarea.displayName = "Textarea"

export { Textarea }


// File: ./components/whoweare.tsx
import Image from "next/image"

export default function WhoWeAre() {
  return (
    <section className="container px-4 py-16 mx-auto">
      <div className="grid items-center gap-8 lg:grid-cols-2">
        <div className="space-y-6">
          <h2 className="text-3xl font-bold tracking-tight text-gray-900">Who We Are</h2>

          <p className="leading-relaxed text-gray-600">
            We are a unique team of dental professionals who have transitioned into software development, bringing a
            deep understanding of both dental practice operations and modern technology solutions.
          </p>

          <p className="leading-relaxed text-gray-600">
            Our mission is to revolutionize dental practice management through innovative software solutions, designed
            by dentists for dentists.
          </p>

          <div className="grid gap-6 md:grid-cols-2">
            <ul className="space-y-3">
              <li className="flex items-center gap-3">
                <span className="flex-shrink-0 w-2 h-2 bg-blue-600 rounded-full" />
                <span>Practice management expertise</span>
              </li>
              <li className="flex items-center gap-3">
                <span className="flex-shrink-0 w-2 h-2 bg-blue-600 rounded-full" />
                <span>Dental workflow optimization</span>
              </li>
              <li className="flex items-center gap-3">
                <span className="flex-shrink-0 w-2 h-2 bg-blue-600 rounded-full" />
                <span>Patient-centric approach</span>
              </li>
            </ul>
            <ul className="space-y-3">
              <li className="flex items-center gap-3">
                <span className="flex-shrink-0 w-2 h-2 bg-blue-600 rounded-full" />
                <span>Modern SaaS solutions</span>
              </li>
              <li className="flex items-center gap-3">
                <span className="flex-shrink-0 w-2 h-2 bg-blue-600 rounded-full" />
                <span>Cloud-based technology</span>
              </li>
              <li className="flex items-center gap-3">
                <span className="flex-shrink-0 w-2 h-2 bg-blue-600 rounded-full" />
                <span>Seamless integration</span>
              </li>
            </ul>
          </div>
        </div>

        <div className="relative h-[400px] rounded-lg overflow-hidden">
          <Image
            src="/img/blog3.jpg"
            alt="Dental examination setup showing modern dental technology"
            fill
            className="object-cover"
            sizes="(max-width: 768px) 100vw, 50vw"
          />
        </div>
      </div>
    </section>
  )
}



// File: ./hooks/use-scroll-spy.ts
// src/hooks/use-scroll-spy.ts

"use client"

import { useState, useEffect } from "react"

export function useScrollSpy(ids: string[], offset = 0) {
  const [activeId, setActiveId] = useState<string>("")

  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            setActiveId(entry.target.id)
          }
        })
      },
      {
        rootMargin: `${-offset}px 0px 0px 0px`,
        threshold: 0.2,
      },
    )

    ids.forEach((id) => {
      const element = document.getElementById(id)
      if (element) {
        observer.observe(element)
      }
    })

    return () => observer.disconnect()
  }, [ids, offset])

  return activeId
}



// File: ./lib/utils.ts
// src/lib/utils.ts

import { clsx, type ClassValue } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}


